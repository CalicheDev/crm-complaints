# Generated by Django 5.0.6 on 2025-08-11 19:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('complaints', '0005_complaint_citizen_address_complaint_citizen_document_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#007bff', help_text='Color en formato hexadecimal', max_length=7)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('channel_type', models.CharField(choices=[('chat', 'Chat en Vivo'), ('email', 'Email'), ('whatsapp', 'WhatsApp'), ('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('phone', 'Llamada Telefónica'), ('sms', 'SMS')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Configuración específica del canal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name', 'channel_type')},
            },
        ),
        migrations.CreateModel(
            name='ChannelIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=500, null=True)),
                ('api_secret', models.CharField(blank=True, max_length=500, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number_id', models.CharField(blank=True, max_length=100, null=True)),
                ('business_account_id', models.CharField(blank=True, max_length=100, null=True)),
                ('page_id', models.CharField(blank=True, max_length=100, null=True)),
                ('app_id', models.CharField(blank=True, max_length=100, null=True)),
                ('smtp_server', models.CharField(blank=True, max_length=200, null=True)),
                ('smtp_port', models.IntegerField(blank=True, null=True)),
                ('email_username', models.CharField(blank=True, max_length=200, null=True)),
                ('email_password', models.CharField(blank=True, max_length=200, null=True)),
                ('use_tls', models.BooleanField(default=True)),
                ('is_connected', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_status', models.CharField(choices=[('pending', 'Pendiente'), ('connected', 'Conectado'), ('error', 'Error'), ('disconnected', 'Desconectado')], default='pending', max_length=50)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='omnichannel.communicationchannel')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=200)),
                ('document', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('facebook_id', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter_handle', models.CharField(blank=True, max_length=100, null=True)),
                ('instagram_handle', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('active', 'Activa'), ('waiting', 'Esperando Cliente'), ('resolved', 'Resuelta'), ('closed', 'Cerrada')], default='active', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=20)),
                ('channel_thread_id', models.CharField(blank=True, help_text='ID del hilo en el canal específico', max_length=255, null=True)),
                ('channel_metadata', models.JSONField(blank=True, default=dict, help_text='Metadatos específicos del canal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_conversations', to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omnichannel.communicationchannel')),
                ('complaint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='complaints.complaint')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='omnichannel.contact')),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='InteractionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('interaction_type', models.CharField(choices=[('complaint_created', 'PQRS Creada'), ('conversation_started', 'Conversación Iniciada'), ('message_sent', 'Mensaje Enviado'), ('call_made', 'Llamada Realizada'), ('email_sent', 'Email Enviado'), ('status_changed', 'Estado Cambiado'), ('agent_assigned', 'Agente Asignado'), ('resolution_provided', 'Solución Proporcionada'), ('follow_up', 'Seguimiento'), ('other', 'Otro')], max_length=50)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='omnichannel.communicationchannel')),
                ('complaint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='complaints.complaint')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interaction_history', to='omnichannel.contact')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omnichannel.conversation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('sender_type', models.CharField(choices=[('contact', 'Contacto'), ('agent', 'Agente'), ('system', 'Sistema'), ('bot', 'Bot')], max_length=20)),
                ('sender_name', models.CharField(blank=True, max_length=200, null=True)),
                ('message_type', models.CharField(choices=[('text', 'Texto'), ('image', 'Imagen'), ('file', 'Archivo'), ('audio', 'Audio'), ('video', 'Video'), ('location', 'Ubicación'), ('system', 'Sistema')], default='text', max_length=20)),
                ('content', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='omnichannel/attachments/')),
                ('attachment_name', models.CharField(blank=True, max_length=255, null=True)),
                ('attachment_size', models.PositiveIntegerField(blank=True, null=True)),
                ('attachment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('channel_message_id', models.CharField(blank=True, help_text='ID del mensaje en el canal específico', max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('is_delivered', models.BooleanField(default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='omnichannel.conversation')),
                ('sender_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationTagAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='omnichannel.conversation')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omnichannel.conversationtag')),
            ],
            options={
                'unique_together': {('conversation', 'tag')},
            },
        ),
    ]
